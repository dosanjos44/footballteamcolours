{"version":3,"sources":["TeamBlock.js","ResultBlock.js","TeamData.js","SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["TeamBlock","_this","this","blockStyle","color","props","team","secondaryhex","backgroundColor","primaryhex","react_default","a","createElement","className","style","onClick","changeTeam","React","Component","ResultBlock","class","TeamData","id","SearchBar","placeholder","onChange","event","searchChange","target","value","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","teams","selectedTeam","searchTerm","searchTeams","bind","assertThisInitialized","_this2","setState","prevState","newSelect","i","length","obj","term","console","log","toLowerCase","filterTeams","includes","push","_this3","TeamBlocks","map","src_TeamBlock","key","src_ResultBlock","src_SearchBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d00a441.chunk.js","sourcesContent":["import React from \"react\"\r\n/*\r\nfunction TeamBlock(props) {\r\n    return(\r\n        <div>\r\n            <h3>{props.team.team}</h3>\r\n            <p>Primary: {props.team.primaryhex}</p>\r\n            <p>Secondary: {props.team.secondaryhex}</p>\r\n        </div>\r\n    )\r\n}\r\n*/\r\n\r\nclass TeamBlock extends React.Component{\r\n\r\n    render(){\r\n\r\n        const blockStyle = {\r\n            color: this.props.team.secondaryhex,\r\n            backgroundColor: this.props.team.primaryhex\r\n        }\r\n\r\n        const team = this.props.team.team\r\n\r\n        return(\r\n            <div>\r\n                <h3 className=\"teamBlock\" style = {blockStyle} onClick={() => {this.props.changeTeam(team)}}>{team}</h3>\r\n            </div>  \r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default TeamBlock","import React from \"react\"\r\n\r\nclass ResultBlock extends React.Component{\r\n  \r\n\r\n    render(){\r\n\r\n        const blockStyle = {\r\n            color: this.props.team.secondaryhex,\r\n            backgroundColor: this.props.team.primaryhex\r\n        }\r\n\r\n        return(\r\n\r\n            <div>\r\n                <h3 className = \"resultHeader\" style = {blockStyle}>{this.props.team.team}</h3>\r\n                <p class=\"resultText\">Primary: {this.props.team.primaryhex}</p>\r\n                <p class=\"resultText\">Secondary: {this.props.team.secondaryhex}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default ResultBlock","const TeamData = [\r\n\r\n{\"id\": \"1\", \"team\": \"Arsenal\", \"primaryhex\": \"#DC0001\", \"secondaryhex\": \"#003175\"},\r\n{\"id\": \"2\", \"team\": \"Bournemouth\", \"primaryhex\": \"#E70404\", \"secondaryhex\": \"#000000\"},\r\n{\"id\": \"3\", \"team\": \"Brighton\", \"primaryhex\": \"#005DAA\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"4\", \"team\": \"Burnley\", \"primaryhex\": \"#630630\", \"secondaryhex\": \"#98DAF5\"},\r\n{\"id\": \"5\", \"team\": \"Cardiff\", \"primaryhex\": \"#2757AF\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"6\", \"team\": \"Chelsea\", \"primaryhex\": \"#034694\", \"secondaryhex\": \"#ED2129\"},\r\n{\"id\": \"7\", \"team\": \"Crystal Palace\", \"primaryhex\": \"#144390\", \"secondaryhex\": \"#C50A2A\"},\r\n{\"id\": \"8\", \"team\": \"Everton\", \"primaryhex\": \"#224289\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"9\", \"team\": \"Fulham\", \"primaryhex\": \"#FFFFFF\", \"secondaryhex\": \"#000000\"},\r\n{\"id\": \"10\", \"team\": \"Huddersfield Town\", \"primaryhex\": \"#0073CF\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"11\", \"team\": \"Leicester City\", \"primaryhex\": \"#0052A1\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"12\", \"team\": \"Liverpool\", \"primaryhex\": \"#DC0100\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"13\", \"team\": \"Man City\", \"primaryhex\": \"#B7D9F5\", \"secondaryhex\": \"#1C204E\"},\r\n{\"id\": \"14\", \"team\": \"Man Utd\", \"primaryhex\": \"#E70404\", \"secondaryhex\": \"#000000\"},\r\n{\"id\": \"15\", \"team\": \"Newcastle Utd\", \"primaryhex\": \"#000000\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"16\", \"team\": \"Southampton\", \"primaryhex\": \"#FF0000\", \"secondaryhex\": \"#FFFFFF\"},\r\n{\"id\": \"17\", \"team\": \"Spurs\", \"primaryhex\": \"#FFFFFF\", \"secondaryhex\": \"#0B1C56\"},\r\n{\"id\": \"18\", \"team\": \"Watford\", \"primaryhex\": \"#FBEE1E\", \"secondaryhex\": \"#000000\"},\r\n{\"id\": \"19\", \"team\": \"West Ham\", \"primaryhex\": \"#810133\", \"secondaryhex\": \"#69AEC4\"},\r\n{\"id\": \"20\", \"team\": \"Wolves\", \"primaryhex\": \"#000000\", \"secondaryhex\": \"#FDBA0B\"},\r\n{\"id\": \"35\", \"team\": \"Accrington Stanley\", \"primaryhex\": \"#DC0100\", \"secondaryhex\": \"#FFFFFF\"},\r\n\r\n]\r\n\r\nexport default TeamData","import React from 'react';\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n    render(){\r\n    return(\r\n        <div id=\"searchDiv\">\r\n            \r\n            <input id=\"searchBar\" placeholder=\"Search\" onChange={event => {this.props.searchChange(event.target.value)}}></input>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar ","import React  from 'react';\nimport './App.css';\nimport TeamBlock from './TeamBlock';\nimport ResultBlock from './ResultBlock';\nimport TeamData from './TeamData';\nimport SearchBar from './SearchBar';\n\nclass App extends React.Component {\n  \n  constructor(){\n    super()\n    this.state = {\n        teams: TeamData,\n        selectedTeam: {team: \"Harchester United\",\n      primaryhex: \"#760EA9\",\n      secondaryhex: \"#FFFFFF\"},\n        searchTerm: \"\",\n        searchTeams: TeamData\n    }\n\n    this.changeTeam = this.changeTeam.bind(this)\n    this.searchChange = this.searchChange.bind(this)\n  }\n\n\n  changeTeam(team){\n\n    this.setState(prevState => {\n      let newSelect = {}\n\n      for(var i = 0; i < this.state.teams.length; i++) {\n        var obj = this.state.teams[i];\n        if (obj.team === team){\n          newSelect = {\n            team: obj.team,\n            primaryhex: obj.primaryhex,\n            secondaryhex: obj.secondaryhex\n          }\n          break;\n        }\n      }  \n      return{\n        teams: this.state.teams,\n        selectedTeam : newSelect\n      }\n    })\n  }\n\n  searchChange(term){\n\n    console.log(term.toLowerCase())\n    term = term.toLowerCase()\n    let filterTeams = []\n\n    if (term === \"\"){\n\n      filterTeams = TeamData\n\n    } else {\n      /*\n      filterTeams = this.state.teams.filter(function(x) {\n        for (var i in x) {\n            if (x[i].toLowerCase().indexOf(term.toLowerCase()) > -1) return x;\n            }\n          })\n          */\n  \n      for(var team in this.state.teams){\n\n          console.log(this.state.teams[team].team.toLowerCase())\n\n          if(this.state.teams[team].team.toLowerCase().includes(term)){\n               filterTeams.push(this.state.teams[team]);\n          }\n        }\n      \n    }\n  \n\n        \n\n\n\n    console.log(filterTeams)\n\n    this.setState( {\n      searchTeams: filterTeams }\n    )\n  }\n\n  \n  \n  render() {\n\n    const TeamBlocks = this.state.searchTeams.map(team =>\n      <TeamBlock key={team.id} team={team} changeTeam={this.changeTeam}/>\n      ) \n\n\n    return (\n      <div className=\"grid-container\">\n        \n        <div className=\"Result\">\n          <ResultBlock team={this.state.selectedTeam}/>\n        </div>\n\n        <div className=\"TeamList\">\n          <SearchBar searchChange = {this.searchChange}/> \n          {TeamBlocks}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}